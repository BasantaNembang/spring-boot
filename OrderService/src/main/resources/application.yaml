
server:
  port: 8081

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

spring:
  application:
    name: OrderService
  datasource:
    url: "jdbc:mysql://${DB_HOST:localhost}:3306/orderdb"
    username: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-biqonisiomf7typl.us.auth0.com/

  config:
    import: "configserver:${CONFIG_SERVER_URI:http://localhost:9296/}"

  cache:
    type: redis
    cache-names:
      - orderDtoCache
  data:
    redis:
      # host: localhost
      # port: 6379 because we are using redis in k8s
      host: redis
      port: 6379
      
resilience4j:
  circuitbreaker:
    instances:
      external:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

microservice:
  product: http://product-service-svc/product
  payment: http://payment-service-svc/payment

